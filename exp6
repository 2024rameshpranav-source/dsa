#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Node structure
struct Node {
    char song[100];         // song name
    struct Node* next;      // pointer to next node
};

struct Node* head = NULL;   // top of stack

// Push operation (Play Song)
void push(char songName[]) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (!newNode) {
        printf("Memory allocation failed\n");
        return;
    }
    strcpy(newNode->song, songName);   // copy song name into node
    newNode->next = head;              // link new node to current head
    head = newNode;                    // update head
    printf("Now Playing: %s\n", songName);
}

// Pop operation (Go Back)
void pop() {
    if (head == NULL) {
        printf("No songs in history!\n");
        return;
    }
    struct Node* temp = head;
    printf("Going back... Stopped: %s\n", temp->song);
    head = head->next;     // move head to next song
    free(temp);            // free removed node
}

// Peek operation (Now Playing)
void peek() {
    if (head == NULL) {
        printf("No song is currently playing\n");
    } else {
        printf("Currently Playing: %s\n", head->song);
    }
}

// Display operation (Playlist History)
void display() {
    if (head == NULL) {
        printf("No songs played yet\n");
        return;
    }
    struct Node* temp = head;
    printf("Playlist History (Latest first):\n");
    while (temp != NULL) {
        printf("%s\n", temp->song);
        temp = temp->next;
    }
}

// Main function
int main() {
    int choice;
    char songName[100];

    while (1) {
        printf("\n--- Music Player Menu ---\n");
        printf("1. Play Song (Push)\n");
        printf("2. Go Back (Pop)\n");
        printf("3. Now Playing (Peek)\n");
        printf("4. Playlist History (Display)\n");
        printf("5. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);
        getchar(); // clear newline left by scanf

        switch (choice) {
            case 1:
                printf("Enter song name: ");
                fgets(songName, sizeof(songName), stdin);
                songName[strcspn(songName, "\n")] = '\0'; // remove newline
                push(songName);
                break;
            case 2:
                pop();
                break;
            case 3:
                peek();
                break;
            case 4:
                display();
                break;
            case 5:
                printf("Exiting Music Player...\n");
                exit(0);
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
    return 0;
}
